import cv2
import hashlib
from Crypto.PublicKey import RSA
from Crypto.Signature import pkcs1_15
from Crypto.Hash import SHA256  # Import the SHA256 module

def create_signature(image_path, private_key):
    # Load the image and generate its hash
    image = cv2.imread(image_path)
    image_data = image.tobytes()

    # Create the SHA-256 hash object
    hash_object = SHA256.new(image_data)  # Use SHA256.new() to create the hash object

    # Create the signature
    signature = pkcs1_15.new(private_key).sign(hash_object)  # Use the hash object directly

    return signature

def load_private_key(key_path):
    with open(key_path, 'rb') as key_file:
        private_key = RSA.import_key(key_file.read())
    return private_key

# Example usage
private_key = load_private_key('private_key.pem')
signature = create_signature('tree.jpg', private_key)
print(f'Signature: {signature.hex()}')
